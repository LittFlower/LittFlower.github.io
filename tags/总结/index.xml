<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>总结 on Little Flower.</title>
    <link>http://littflower.github.io/tags/%E6%80%BB%E7%BB%93/</link>
    <description>Recent content in 总结 on Little Flower.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://littflower.github.io/tags/%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>区间线段类问题合集</title>
      <link>http://littflower.github.io/posts/%E5%8C%BA%E9%97%B4%E7%BA%BF%E6%AE%B5%E7%B1%BB%E9%97%AE%E9%A2%98%E5%90%88%E9%9B%86/</link>
      <pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>http://littflower.github.io/posts/%E5%8C%BA%E9%97%B4%E7%BA%BF%E6%AE%B5%E7%B1%BB%E9%97%AE%E9%A2%98%E5%90%88%E9%9B%86/</guid>
      <description>0x00.前言 近一个月以来，不管是在模拟赛中，还是在日常做题中，甚至是在CSP考试中，都遇到了各种各样的区间问题，其题目形式、背景多种多样，但其根本都可以归纳为一种区间线段模型，遂加以整理。
0x01. 维护单一线段+选取部分区间 首先来看这一种较为基础的版本。
题目链接：luogu P1803
题目大意：给定 $n$ 个区间，要求维护一条线段（时间线），使得落在该条线段上的区间尽可能的多。注意：任取这条线段上一点，都要满足不被两个及以上的区间覆盖。求最多能放多少个线段。
题目解析：这道题目要求线段上任意一个点都不被两个及以上的区间覆盖，也就是说凡是合法解必然是由不相交的区间构成的。考虑用贪心的策略：**对于所有区间，按左端点排序，然后依次考虑每个区间，能放就放。**这个策略的正确性显然，因为越靠前的区间放置后，对于后面的区间影响越小。如何维护这个线段呢？区间有哪几种关系呢？停下来思考。
显然，区间有且只有 相交、相离、包含 三种关系。
更为具体的，在这个题目背景下，我们不难发现，只需要维护线段的右端点$pos$，依次考虑每个区间，如果区间与线段相交，则跳过这个线段，如果区间被线段包含，则需要用当前区间右端点替换线段右端点，因为这样对最终的答案不会更差，如果区间与线段相离，更新$pos$为当前区间右端点，$ans$++
#include &amp;lt;bits/stdc++.h&amp;gt; #define MAXN (1000007) using namespace std; int n, ans = 1; struct edge { int l, r; }e[MAXN]; bool inline cmp(const edge x, const edge y) { if(x.l == y.l) return x.r &amp;lt; y.r; return x.l &amp;lt; y.l; } int main() { scanf(&amp;#34;%d&amp;#34;, &amp;amp;n); for(int i = 1; i &amp;lt;= n; ++i) { scanf(&amp;#34;%d%d&amp;#34;, &amp;amp;e[i].</description>
    </item>
    
  </channel>
</rss>
